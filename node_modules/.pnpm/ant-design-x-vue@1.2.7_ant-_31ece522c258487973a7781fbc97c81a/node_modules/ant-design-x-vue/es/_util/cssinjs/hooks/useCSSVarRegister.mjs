import { removeCSS as f } from "../../../vc-util/Dom/dynamicCSS.mjs";
import h, { ATTR_MARK as k } from "../StyleContext.mjs";
import { isClientSide as C, transformToken as x, toStyleStr as T } from "../util.mjs";
import R from "./useGlobalCache.mjs";
import { a as V } from "./useStyleRegister/index.tsx2.mjs";
const A = "cssVar", v = (r, i) => {
  const { key: t, prefix: o, unitless: s, ignore: n, token: c, scope: e = "" } = r, {
    cache: { instanceId: l },
    container: m
  } = useContext(h), { _tokenKey: y } = c, u = [...r.path, t, e, y];
  return R(
    A,
    u,
    () => {
      const a = i(), [S, p] = x(a, t, {
        prefix: o,
        unitless: s,
        ignore: n,
        scope: e
      }), d = V(u, p);
      return [S, p, d, t];
    },
    ([, , a]) => {
      C && f(a, { mark: k });
    }
  );
}, E = (r, i, t) => {
  const [, o, s, n] = r, { plain: c } = t || {};
  if (!o)
    return null;
  const e = -999, l = {
    "data-rc-order": "prependQueue",
    "data-rc-priority": `${e}`
  }, m = T(
    o,
    n,
    s,
    l,
    c
  );
  return [e, s, m];
};
export {
  A as CSS_VAR_PREFIX,
  v as default,
  E as extract
};
