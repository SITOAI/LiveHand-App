import { nextTick as t } from "vue";
const u = (e) => e !== void 0 && (e === "topLeft" || e === "topRight") ? "slide-down" : "slide-up", s = (e, r = {}) => e ? {
  name: e,
  appear: !0,
  // type: 'animation',
  // appearFromClass: `${transitionName}-appear ${transitionName}-appear-prepare`,
  // appearActiveClass: `antdv-base-transtion`,
  // appearToClass: `${transitionName}-appear ${transitionName}-appear-active`,
  enterFromClass: `${e}-enter ${e}-enter-prepare ${e}-enter-start`,
  enterActiveClass: `${e}-enter ${e}-enter-prepare`,
  enterToClass: `${e}-enter ${e}-enter-active`,
  leaveFromClass: ` ${e}-leave`,
  leaveActiveClass: `${e}-leave ${e}-leave-active`,
  leaveToClass: `${e}-leave ${e}-leave-active`,
  ...r
} : {
  css: !1,
  ...r
}, a = (e, r = {}) => e ? {
  name: e,
  appear: !0,
  // appearFromClass: `${transitionName}-appear ${transitionName}-appear-prepare`,
  appearActiveClass: `${e}`,
  appearToClass: `${e}-appear ${e}-appear-active`,
  enterFromClass: `${e}-appear ${e}-enter ${e}-appear-prepare ${e}-enter-prepare`,
  enterActiveClass: `${e}`,
  enterToClass: `${e}-enter ${e}-appear ${e}-appear-active ${e}-enter-active`,
  leaveActiveClass: `${e} ${e}-leave`,
  leaveToClass: `${e}-leave-active`,
  ...r
} : {
  css: !1,
  ...r
}, v = () => ({
  height: 0,
  opacity: 0
}), $ = (e) => ({
  height: `${e.scrollHeight}px`,
  opacity: 1
}), o = (e) => ({
  height: `${e.offsetHeight}px`
}), g = (e = "ant-motion-collapse", r, p) => ({
  name: e,
  appear: !0,
  css: !0,
  onBeforeEnter: (l) => {
    p.value = e, r.value = v();
  },
  onEnter: (l) => {
    t(() => {
      r.value = $(l);
    });
  },
  onAfterEnter: () => {
    p.value = "", r.value = {};
  },
  onBeforeLeave: (l) => {
    p.value = e, r.value = o(l);
  },
  onLeave: (l) => {
    setTimeout(() => {
      r.value = v();
    });
  },
  onAfterLeave: () => {
    p.value = "", r.value = {};
  }
}), C = (e, r, p) => p !== void 0 ? p : `${e}-${r}`;
export {
  g as collapseMotion,
  u as getTransitionDirection,
  a as getTransitionGroupProps,
  C as getTransitionName,
  s as getTransitionProps
};
