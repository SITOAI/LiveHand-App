const r = (...t) => t, o = (...t) => t, a = (t) => {
  const n = t;
  return n.install = function(e) {
    e.component(n.displayName || n.name, t);
  }, t;
};
function y() {
  return { type: [Function, Array] };
}
function c(t) {
  return { type: Object, default: t };
}
function i(t) {
  return { type: Boolean, default: t };
}
function p(t) {
  return { type: Function, default: t };
}
function u(t, n) {
  const e = { validator: () => !0, default: t };
  return e;
}
function f() {
  return { validator: () => !0 };
}
function l(t) {
  return { type: Array, default: t };
}
function d(t) {
  return { type: String, default: t };
}
function s(t, n) {
  return t ? { type: t, default: n } : u(n);
}
export {
  u as anyType,
  l as arrayType,
  i as booleanType,
  y as eventType,
  p as functionType,
  c as objectType,
  s as someType,
  d as stringType,
  r as tuple,
  o as tupleNum,
  f as vNodeType,
  a as withInstall
};
