import { shallowRef as u, defineComponent as p, computed as o, provide as c, watch as d, unref as g, triggerRef as f, inject as m } from "vue";
import { resetWarned as W } from "../vc-util/warning.mjs";
import { objectType as s } from "./type.mjs";
function a() {
}
function b() {
  W();
}
let j = a;
const i = Symbol("WarningContext"), t = u(), x = (e) => {
  c(i, e), d(
    e,
    () => {
      t.value = g(e), f(t);
    },
    { immediate: !0, deep: !0 }
  );
}, w = () => m(
  i,
  o(() => t.value || {})
), y = p({
  props: {
    value: s()
  },
  setup(e, { slots: n }) {
    return x(o(() => e.value)), () => {
      var r;
      return (r = n.default) == null ? void 0 : r.call(n);
    };
  }
}), h = () => {
  const e = () => {
  };
  return e.deprecated = a, e;
};
export {
  y as WarningContextProvider,
  j as default,
  h as devUseWarning,
  t as globalWarningContextApi,
  a as noop,
  b as resetWarned,
  w as useWarningContextInject,
  x as useWarningContextProvider
};
