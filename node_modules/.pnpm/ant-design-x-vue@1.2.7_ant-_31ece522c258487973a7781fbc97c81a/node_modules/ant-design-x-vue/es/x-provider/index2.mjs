import { defineComponent as l, useSlots as u, computed as n, createVNode as s, mergeProps as d } from "vue";
import { a as h } from "../attachments/Attachments2.mjs";
import { XProviderContextProvider as p } from "./context.mjs";
import g from "./hooks/use-x-provider-context.mjs";
import { ConfigProvider as f } from "ant-design-vue";
const w = /* @__PURE__ */ l({
  name: "AXProvider",
  inheritAttrs: !1,
  __name: "index",
  props: {
    bubble: {},
    conversations: {},
    prompts: {},
    sender: {},
    suggestion: {},
    thoughtChain: {},
    attachments: {},
    welcome: {},
    iconPrefixCls: {},
    getTargetContainer: {},
    getPopupContainer: {},
    prefixCls: {},
    getPrefixCls: {},
    renderEmpty: {},
    transformCellText: {},
    csp: {},
    input: {},
    autoInsertSpaceInButton: {
      type: Boolean
    },
    locale: {},
    pageHeader: {},
    componentSize: {},
    componentDisabled: {
      type: Boolean
    },
    direction: {},
    space: {},
    virtual: {
      type: Boolean
    },
    dropdownMatchSelectWidth: {},
    form: {},
    pagination: {},
    theme: {},
    select: {},
    wave: {}
  },
  setup(e) {
    const r = h(e, ["attachments", "bubble", "conversations", "prompts", "sender", "suggestion", "thoughtChain", "welcome"]), t = u(), i = n(() => ({
      attachments: e.attachments,
      bubble: e.bubble,
      conversations: e.conversations,
      prompts: e.prompts,
      sender: e.sender,
      suggestion: e.suggestion,
      thoughtChain: e.thoughtChain,
      welcome: e.welcome
    })), {
      theme: o
    } = g(), m = n(() => ({
      ...(o == null ? void 0 : o.value) || {},
      ...r.theme
    })), c = n(() => {
      var a;
      return (a = t.default) == null ? void 0 : a.call(t);
    });
    return () => s(p, {
      value: i.value
    }, {
      default: () => [s(f, d(r, {
        theme: m.value
      }), {
        default: () => [c.value]
      })]
    });
  }
});
export {
  w as _
};
