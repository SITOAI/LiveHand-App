import { shallowRef as a, defineComponent as u, computed as o, provide as p, watch as i, unref as c, triggerRef as m, inject as f } from "vue";
import { objectType as x } from "../_util/type.mjs";
const d = Symbol("SenderHeaderContext"), t = a(), C = (e) => {
  p(d, e), i(
    e,
    () => {
      t.value = c(e), m(t);
    },
    { immediate: !0, deep: !0 }
  );
}, l = () => f(
  d,
  o(() => t.value || {})
), v = u({
  props: {
    value: x()
  },
  setup(e, { slots: r }) {
    return C(o(() => e.value)), () => {
      var n;
      return (n = r.default) == null ? void 0 : n.call(r);
    };
  }
});
export {
  v as SenderHeaderContextProvider,
  v as default,
  t as globalSenderHeaderContextApi,
  l as useSenderHeaderContextInject,
  C as useSenderHeaderContextProvider
};
